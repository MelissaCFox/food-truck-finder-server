# Generated by Django 4.0.2 on 2022-02-09 16:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('foodtruckfinderapi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('profile_img_src', models.ImageField(null=True, upload_to='neighborhoods')),
                ('linkNG', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('description', models.TextField()),
                ('website_url', models.TextField(default='')),
                ('facebook_url', models.TextField(default='')),
                ('instagram_url', models.TextField(default='')),
                ('twitter_url', models.TextField(default='')),
                ('profile_img_src', models.ImageField(upload_to='')),
                ('hours', models.CharField(max_length=55)),
                ('dollars', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserTruckReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('date', models.DateField()),
                ('rating', models.IntegerField()),
                ('anonymous', models.BooleanField()),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='foodtruckfinderapi.truck')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='foodtruckfinderapi.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='UserTruckFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodtruckfinderapi.truck')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='foodtruckfinderapi.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='UserSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('message', models.TextField()),
                ('read', models.BooleanField()),
                ('include_contact', models.BooleanField()),
                ('neighborhood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodtruckfinderapi.neighborhood')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='foodtruckfinderapi.truck')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='foodtruckfinderapi.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='TruckOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodtruckfinderapi.truck')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trucks', to='foodtruckfinderapi.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='TruckLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_locations', to='foodtruckfinderapi.day')),
                ('neighborhood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhood_locations', to='foodtruckfinderapi.neighborhood')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='truck_locations', to='foodtruckfinderapi.truck')),
            ],
        ),
        migrations.CreateModel(
            name='TruckFoodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='foodtruckfinderapi.truck')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodtruckfinderapi.foodtype')),
            ],
        ),
        migrations.AddField(
            model_name='truck',
            name='food_types',
            field=models.ManyToManyField(related_name='trucks', through='foodtruckfinderapi.TruckFoodType', to='foodtruckfinderapi.FoodType'),
        ),
    ]
